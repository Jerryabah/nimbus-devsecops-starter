AWSTemplateFormatVersion: '2010-09-09'
Description: 'Nimbus Analytics - Secure ECS Fargate Cluster'

Parameters:
  ClusterName:
    Type: String
    Default: nimbus-security-cluster
    Description: Name of the ECS cluster

  Environment:
    Type: String
    Default: production
    AllowedValues: [development, staging, production]

Resources:
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Ref ClusterName
      ClusterSettings:
        - Name: containerInsights
          Value: enabled
      CapacityProviders:
        - FARGATE
        - FARGATE_SPOT
      DefaultCapacityProviderStrategy:
        - CapacityProvider: FARGATE
          Weight: 1
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Security
          Value: enabled

  ECSExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      Policies:
        - PolicyName: SecretsManagerAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource: !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:nimbus/*'

Outputs:
  ClusterArn:
    Description: ECS Cluster ARN
    Value: !GetAtt ECSCluster.Arn
    Export:
      Name: !Sub '${ClusterName}-arn'
  
  ExecutionRoleArn:
    Description: ECS Execution Role ARN
    Value: !GetAtt ECSExecutionRole.Arn
    Export:
      Name: !Sub '${ClusterName}-execution-role'
